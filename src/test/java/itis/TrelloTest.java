package itis;// Generated by Selenium IDE

import com.fasterxml.jackson.databind.ObjectMapper;
import itis.bases.AuthBase;
import itis.bases.TestBase;
import itis.entities.Board;
import itis.helper.BoardHelper;
import itis.helper.ColumnHelper;
import itis.helper.NavigationHelper;
import itis.util.Settings;
import org.junit.Assert;
import org.junit.Test;

import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;

public class TrelloTest extends TestBase {

    @Test
    public void Test() throws Exception {
        Settings.getData();
        getLoginPageTest();
        doLoginTest();
//        loginWithInvalidData();
        getBoardsPageTest();
        addBoardTest();
        addColumnTest();
        deleteColumnTest();
        deleteBoardTest();
    }

//    @Test
    private void getLoginPageTest() throws Exception {
        getAppManager().getNavigateHelper().getLoginPage();
        getAppManager().getNavigateHelper().checkLoginPageUrl();
        Assert.assertEquals(NavigationHelper.baseUrl, "https://trello.com/home");
    }

//    @Test
    public void doLoginTest() throws Exception {
        AuthBase.isLoggedIn();
    }

    @Test
    public void loginWithInvalidData() throws Exception {
        AuthBase.loginWithInvalidData();
    }

//    @Test
    private void getBoardsPageTest() throws Exception {
//        doLoginTest();
//        getAppManager().getLoginHelper().doLogin(LoginHelper.USER);
        getAppManager().getNavigateHelper().getBoardsPage();
        getAppManager().getNavigateHelper().checkBoardPageUrl();
        Assert.assertEquals(NavigationHelper.boardUrl, "https://trello.com/marinarhipova/boards");
    }

//    @Test
    public void addBoardTest() throws Exception {
//        getBoardsPageTest();
//        getAppManager().getBoardHelper().addBoard();
//        Assert.assertTrue(BoardHelper.isAdded);
//        getBoardsPageTest();
        getAppManager().getBoardHelper().addBoard();

        ObjectMapper mapper = new ObjectMapper();
        ArrayList<HashMap<String, String>> items =  mapper.readValue(new File("items.json"), ArrayList.class);

        for (int i = 0; i < items.size(); i++){
            HashMap map = items.get(i);
            Board board = new Board(map.get("title").toString());
            getAppManager().getBoardHelper().addBoard(board.getTitle());
            getAppManager().getNavigateHelper().getBoardsPage();
            Assert.assertTrue(BoardHelper.isAdded);
        }

    }

//    @Test
    public void addColumnTest() throws Exception {
//        addBoardTest();
        getAppManager().getColumnHelper().addColumn();
        getAppManager().getColumnHelper().checkAddedColumn();
        Assert.assertEquals(ColumnHelper.NAME, "Yessss");
    }


//    @Test
    public void deleteColumnTest() throws Exception {
//        addColumnTest();
        getAppManager().getColumnHelper().deleteColumn();
        Assert.assertTrue(ColumnHelper.isDeleted);
    }

//    @Test
    public void deleteBoardTest() throws Exception {
//        deleteColumnTest();
        getAppManager().getBoardHelper().deleteBoard();
        Assert.assertTrue(BoardHelper.isDeleted);
    }

}
