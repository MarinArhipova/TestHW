package itis;// Generated by Selenium IDE

import com.fasterxml.jackson.databind.ObjectMapper;
import itis.bases.TestBase;
import itis.entities.Board;
import itis.helper.BoardHelper;
import itis.helper.ColumnHelper;
import itis.helper.LoginHelper;
import itis.helper.NavigationHelper;
import org.junit.Assert;
import org.junit.Test;

import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;

//@RunWith(DataProviderRunner.class)
public class TrelloTest extends TestBase {

    private static final String FILE_PATH = "src/test/resources/json/board.txt";

//    @DataProvider
//    public static Object[][] boardDataProvider() throws IOException, ParseException {
//        JSONParser parser = new JSONParser();
//        Object obj = parser.parse(new FileReader(FILE_PATH));
//        JSONObject jsonObject = (JSONObject) obj;
//        Board board = new Board((String)jsonObject.get("title"));
//        System.out.println(board.getTitle());
//        Object[][] objs = new Object[1][1];
//        objs[0][0] = board;
//        return objs;
//    }

    @Test
    public void getLoginPageTest() throws Exception {
        getAppManager().getNavigateHelper().getLoginPage();
        getAppManager().getNavigateHelper().checkLoginPageUrl();
        Assert.assertEquals(NavigationHelper.baseUrl, "https://trello.com/home");
    }

    @Test
    public void doLoginTest() throws Exception {
        getLoginPageTest();
        getAppManager().getLoginHelper().doLogin(LoginHelper.USER);
        getAppManager().getLoginHelper().checkUsername();
        Assert.assertEquals(LoginHelper.USERNAME, "MarinArhipova (marinarhipova)");
    }

    @Test
    public void getBoardsPageTest() throws Exception {
        doLoginTest();
//        getAppManager().getLoginHelper().doLogin(LoginHelper.USER);
        getAppManager().getNavigateHelper().getBoardsPage();
        getAppManager().getNavigateHelper().checkBoardPageUrl();
        Assert.assertEquals(NavigationHelper.boardUrl, "https://trello.com/marinarhipova/boards");
    }

    @Test
//    @UseDataProvider("boardDataProvider")
    public void addBoardTest() throws Exception {
//        getBoardsPageTest();
//        getAppManager().getBoardHelper().addBoard();
//        Assert.assertTrue(BoardHelper.isAdded);
        getBoardsPageTest();
        ObjectMapper mapper = new ObjectMapper();
        ArrayList<HashMap<String, String>> items =  mapper.readValue(new File("items.json"), ArrayList.class);

        for (int i = 0; i < items.size(); i++){
            HashMap map = items.get(i);
            Board board = new Board(map.get("title").toString());
            //app.noteHelper.setItemText(actualText);
            getAppManager().getBoardHelper().addBoard(board.getTitle());
            getAppManager().getNavigateHelper().getBoardsPage();
            Assert.assertTrue(BoardHelper.isAdded);
        }

    }

    @Test
    public void addColumnTest() throws Exception {
        addBoardTest();
        getAppManager().getColumnHelper().addColumn();
        getAppManager().getColumnHelper().checkAddedColumn();
        Assert.assertEquals(ColumnHelper.NAME, "Yessss");
    }


    @Test
    public void deleteColumnTest() throws Exception {
        addColumnTest();
        getAppManager().getColumnHelper().deleteColumn();
        Assert.assertTrue(ColumnHelper.isDeleted);
    }

    @Test
    public void deleteBoardTest() throws Exception {
        deleteColumnTest();
        getAppManager().getBoardHelper().deleteBoard();
        Assert.assertTrue(BoardHelper.isDeleted);
    }

}
